function BW_state_builder(RVE,Fdot,P,forming_rate,num_con)
header = cellstr('#!/bin/bash');

pre = ''; % NOTE: all related commands have been removed.

% The deformation time
load time.mat time
T = size(time,1) == 2;
steps_1 = num2str(ceil(time(1))  *5* ceil(forming_rate)*10);
steps_2 = num2str(ceil(time(end))*5* ceil(forming_rate)*10);
time = num2str(time);

i_max = size(Fdot,1);
state_builder(1,1)= cellstr(' ');
for i = 1:i_max
    i_str = num2str(i);
    state_builder(end+1,1)= cellstr('touch BT.load');
    if ~T
        state_builder(end+1,1)= cellstr([...
            'echo "Fdot ' char(Fdot(i,1)) ' ' char(Fdot(i,2)) ' * ' ...
            char(Fdot(i,3)) ' ' char(Fdot(i,4)) ' * '...
            '0 0 * stress ' char(P(i,1)) ' ' char(P(i,2)) ' 0 ' ...
            char(P(i,3)) ' ' char(P(i,4)) ' 0 ' ...
            '* * 0 time ' time ...
            ' incs ' steps_1 ' freq 1" >> BT.load']);
    elseif T
        state_builder(end+1,1)= cellstr([...
            'echo "Fdot ' char(Fdot(i,1)) ' ' char(Fdot(i,2)) ' * ' ...
            char(Fdot(i,3)) ' ' char(Fdot(i,4)) ' * '...
            '0 0 * stress ' char(P(i,1)) ' ' char(P(i,2)) ' 0 ' ...
            char(P(i,3)) ' ' char(P(i,4)) ' 0 ' ...
            '* * 0 time ' time(1,:) ...
            ' incs ' steps_1 ' freq 1" >> BT.load']);
        
        state_builder(end+1,1)= cellstr([...
            'echo "Fdot ' char(Fdot(i,1)) ' ' char(Fdot(i,2)) ' * ' ...
            char(Fdot(i,3)) ' ' char(Fdot(i,4)) ' * '...
            '0 0 * stress ' char(P(i,1)) ' ' char(P(i,2)) ' 0 ' ...
            char(P(i,3)) ' ' char(P(i,4)) ' 0 ' ...
            '* * 0 time ' time(2,:) ...
            ' incs ' steps_2 ' freq 1 dropguessing" >> BT.load']);
    end    
    
    state_builder(end+1,1)= cellstr(['mkdir ' pre 'sample_' i_str]);
    
    state_builder(end+1,1)= cellstr(['cp ' convertStringsToChars(RVE) ...
        ' ' pre 'sample_' i_str]);
    state_builder(end+1,1)= cellstr(['cp material.config ' pre 'sample_'...
        i_str]);
    state_builder(end+1,1)= cellstr(['mv BT.load ' pre 'sample_' ...
        i_str]);
    if num_con
    state_builder(end+1,1)= cellstr(['cp numerics.config ' pre 'sample_'...
        i_str]);
    end
end

% Export the bash file
state_builder_command = vertcat(header(1,1),state_builder);
fid = fopen([pre 'BT_state_builder.sh'],'w');
for i = 1:size(state_builder_command,1)
    fprintf(fid,'%s\n',state_builder_command{i});
end
fclose(fid);
end